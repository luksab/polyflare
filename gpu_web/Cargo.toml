[package]
name = "gpu_web"
version = "0.1.0"
authors = ["luksab <lukas@sabatschus.de>"]
edition = "2018"
resolver = "2"
build = "build.rs"

[[bin]]
name = "gpu_web"
path = "src/main.rs"

[lib]
name = "gpu_web"
path = "src/lib/lib.rs"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
image = "0.24.1"
winit = { version = "0.26" }
cgmath = "0.18"
wgpu = "0.12"
rayon = "1.4"
pollster = "0.2"
bytemuck = { version = "1.4", features = ["derive"] }
anyhow = "1.0"
imgui = "0.8.2"
imgui-winit-support = { version = "0.8.2", default-features = false, features = ["winit-26"] }
imgui-wgpu = "0.19.0"
fastrand = "1.5"
png = "0.17"
directories = "4.0"
ron = "0.7"
structopt = "0.3"
itertools = "0.10.3"

getrandom = { version = "0.2.5", features = ["js"] }

polynomial_optics = { path = "../polynomial_optics" }

arrayvec = "0.7"
log = "0.4"
raw-window-handle = "0.4"
serde = { version = "1", features = ["derive"]}
smallvec = "1"

wasm-bindgen = "0.2.76"
web-sys = { version = "0.3.53", features = [
    "Document",
    "Navigator",
    "Node",
    "NodeList",
    "Gpu",
    "GpuAdapter",
    "GpuAddressMode",
    "GpuBindGroup",
    "GpuBindGroupDescriptor",
    "GpuBindGroupEntry",
    "GpuBindGroupLayout",
    "GpuBindGroupLayoutDescriptor",
    "GpuBindGroupLayoutEntry",
    "GpuBlendComponent",
    "GpuBlendFactor",
    "GpuBlendOperation",
    "GpuBlendState",
    "GpuBuffer",
    "GpuBufferBinding",
    "GpuBufferBindingLayout",
    "GpuBufferBindingType",
    "GpuBufferDescriptor",
    "GpuBufferUsage",
    "GpuCanvasContext",
    "GpuCanvasConfiguration",
    "GpuColorDict",
    "GpuColorTargetState",
    "GpuColorWrite",
    "GpuCommandBuffer",
    "GpuCommandBufferDescriptor",
    "GpuCommandEncoder",
    "GpuCommandEncoderDescriptor",
    "GpuCompareFunction",
    "GpuCompilationInfo",
    "GpuCompilationMessage",
    "GpuCompilationMessageType",
    "GpuComputePassDescriptor",
    "GpuComputePassEncoder",
    "GpuComputePipeline",
    "GpuComputePipelineDescriptor",
    "GpuCullMode",
    "GpuDepthStencilState",
    "GpuDevice",
    "GpuDeviceDescriptor",
    "GpuDeviceLostInfo",
    "GpuDeviceLostReason",
    "GpuErrorFilter",
    "GpuExtent3dDict",
    "GpuFeatureName",
    "GpuFilterMode",
    "GpuFragmentState",
    "GpuFrontFace",
    "GpuImageCopyBuffer",
    "GpuImageCopyTexture",
    "GpuImageDataLayout",
    "GpuIndexFormat",
    "GpuLoadOp",
    "GpuMapMode",
    "GpuMultisampleState",
    "GpuObjectDescriptorBase",
    "GpuOrigin2dDict",
    "GpuOrigin3dDict",
    "GpuOutOfMemoryError",
    "GpuPipelineDescriptorBase",
    "GpuPipelineLayout",
    "GpuPipelineLayoutDescriptor",
    "GpuPipelineStatisticName",
    "GpuPowerPreference",
    "GpuPrimitiveState",
    "GpuPrimitiveTopology",
    "GpuProgrammableStage",
    "GpuQuerySet",
    "GpuQuerySetDescriptor",
    "GpuQueryType",
    "GpuQueue",
    "GpuRenderBundle",
    "GpuRenderBundleDescriptor",
    "GpuRenderBundleEncoder",
    "GpuRenderBundleEncoderDescriptor",
    "GpuRenderPassColorAttachment",
    "GpuRenderPassDepthStencilAttachment",
    "GpuRenderPassDescriptor",
    "GpuRenderPassEncoder",
    "GpuRenderPipeline",
    "GpuRenderPipelineDescriptor",
    "GpuRequestAdapterOptions",
    "GpuSampler",
    "GpuSamplerBindingLayout",
    "GpuSamplerBindingType",
    "GpuSamplerDescriptor",
    "GpuShaderModule",
    "GpuShaderModuleDescriptor",
    "GpuShaderStage",
    "GpuStencilFaceState",
    "GpuStencilOperation",
    "GpuStorageTextureAccess",
    "GpuStorageTextureBindingLayout",
    "GpuStoreOp",
    "GpuSupportedFeatures",
    "GpuSupportedLimits",
    "GpuTexture",
    "GpuTextureAspect",
    "GpuTextureBindingLayout",
    "GpuTextureDescriptor",
    "GpuTextureDimension",
    "GpuTextureFormat",
    "GpuTextureSampleType",
    "GpuTextureUsage",
    "GpuTextureView",
    "GpuTextureViewDescriptor",
    "GpuTextureViewDimension",
    "GpuUncapturedErrorEvent",
    "GpuUncapturedErrorEventInit",
    "GpuValidationError",
    "GpuVertexAttribute",
    "GpuVertexBufferLayout",
    "GpuVertexFormat",
    "GpuVertexState",
    "GpuVertexStepMode",
    "HtmlCanvasElement",
    "OffscreenCanvas",
    "Window",
    "Location",
]}
js-sys = "0.3.50"
wasm-bindgen-futures = "0.4.23"
# enable parking_lot's wasm-bindgen feature so that it, in turn, enables that of crate `instant`
parking_lot = { version = "0.11", features = ["wasm-bindgen"] }

console_error_panic_hook = "0.1.6"
console_log = "0.1.2"
rand = { version = "0.7", features = ["wasm-bindgen"] }

[target.'cfg(target_arch = "wasm32")'.dependencies.naga]
git = "https://github.com/gfx-rs/naga"
rev = "a45b9a6"
#version = "0.8"
features = ["wgsl-out"]
